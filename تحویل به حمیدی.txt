چیزهایی که به حمیدی بگویم

سوالات:
1- مثلا اول wget که سرعت زیاد است آیا مثلا چیزی شبیه burst time داریم. اصلا اینی که گفتم چی هست
2- یا مثلا exhaustion ی چیزی داریم در پورت یا لینک و یا اینترفیس یا شبکه یا هر چیز دیگری که بتونه باشه
3- 

سناریو ها:
1- تست می کنم ببینم اگر سرعت ارسال را کمتر کنیم چقدر کمک می کند به کاهش لاست و باید لاست از بین برود قاعدتا
2- ببینم می شود کاری کرد که با یک سلکت و یا ای پول فقط یک پکت گرفت
3- پکت ها homogen باشد یا heterogen همگنی و غیر همگنی در اینکه بیخودی اول کار فرض کنیم یک بافر بزرگ بدیم دست تابع خواننده موثر است
4- محاسبه یاز اف و ادرس و اینا رو حذف کنم
5- نان بلاک بودن سوکت را تست کنم
6- اجرا از داخل ویژوال استادیو و یا از داخل کنسول
7- زمان اجرای برنامه لیستنر مثلا بیشتر باشد یعنی خیلی وقت روی تابع بلاک باشد و بعد آزاد شود یهویی و یا حالت سریع دریافت کن
8- حافظه ارسالی برای پر کردن align باشد و یا نباشد طبق برنامه tst_recvmmsg_flood_udp
9- نکنه ویندوز این وسط گند میزنه به پکت ها
10- نکنه ویرتوال باکس این وسط گند میزنه با نتایج. مشاهده 9 را ببین
11- بافر در هیپ باشه و یا استک
12- برویم سراغ align بودن و میزان الاین بودن روی سرعت دریافت
13- با pcap
14- با pfring
16- با raw packet




مشاهدات:
1- وقتی سرعت ارسال پکت را کم کردم همچنان برنامه من نسخه فقط دریافت یو دی پی لاست داشت متاسفانه . یعنی مثلا فاصله هر پکت را 1 نانو و 10 و 100 و 1000 نانو کردم لاست داشت
2- در برنامه tst_recvmmsg_flood_udp با فاصله اندازی یک میکرون زمان در ارسال به دریافت صد درصدی رسیدیم. در این سناریو ها ارسال یک میلیون واحد بود
3- با برنامه tst_continuly_recvfrom که یعنی دریفات یو دی پی فقط با معطل ماندن توسط تابع recvfrom حتی وقتی فاصله زمانی ارسال 100 نانو ثانیه بود بازهم لاست داشتیم. البته اینجا نان بلاک بود سوکت خواننده
4- سناریوی 3 به همراه بلاک کردن سوکت همچنان لاست داشت. در سناریو های 3 و 4 خواستم همه پی لود را بخوانم
5- در سناریوی 4 به جای اینکه به تابع بگم به اندازه همه بافر حافظه رو بخوت گفتم یک بایت بخون و 100 خوند و لاست نداشت
6- در ادامه سناریوی 5 . حالا همچنان در tst_continuly_recvfrom وقتی ارسال با پی لود تک بایت است و دریافت را دو بایت زدم هم لاست مشاهده شد
7- با tst_continuly_recvfrom وقتی دو بایت فرستادم و فاصله زمانی 100 میکرو ثانیه بود و دریافت هم 2 بایت خوند لاست داشتیم
8- در tst_continuly_recvfrom من دو بایت فرستادم ولی یک باید خوندم که لاست داشت
9- با اجرای tst_continuly_recvfrom و ارسال 1 میل پکت یک وقتایی لاست نداشت و یک وقت هایی لاست داشت. شک کردم به ویندوز
10- مشاهده خوب وقتی در tst_continuly_recvfrom پکت یکی بود و آنرا الاین کردم روی 64 بیت و سی پی یو را افینیتی کردم روی صفرمی  و فقط یک بایت خواندم و محاسبات اضافه شامل محاسبه ادرس و این ها رو دیگر انجام ندادم و ارسال تنها با یک نانو ثانیه فاصله انجام شد و Enlarge the receive buffer . که منجر شد دیگر هیچ لاستی نداشتیم. در ضمن اگر فاصله صفر می شد یعنی ارسال گشت سر هم بود همچنان لاست داشتیم
11- در سناریوی 10 الاین را 8 کردم
12- همه مزیت هایی که در سناریوی 10 بود را حذف کردم غیر از بزرگ کردم بافر رسیو و نتیجه خوب شد و لاست نداشتیم
13- ولی همچنان در سناروی 12 اگر فاصله زمانی ارسال را صفر کنیم بازهم لاست داریم
14- با نسخه tst_continuly_recvfrom حافظه را زیاد کردم. ادرس بافر را الاین کردم. سی پی یو را روی صفر فیکس کردم. غیر بلاکی کردم رید را . تک بایت خواندم . ولی بازهم همه را نخواند در یک میلیون پکت
15- در tst_udp_get_select_recv با سلکت که کار میکردم یک جاهایی سلکت دریافت پکت رو دیگه متوجه نمی شد و در واقع با تایم اوت ان می پرید بیرون
16- در tst_upd_get_epool_recv وقتی با recvfrom , recv  تست کردم همچنان از دریافت و شمارش همه موارد جا ماند و حتی وقتی ارسال کننده تاخیر هم انداخت باز هم نتوانست به آن برسد
17- در سناریوی 16 زمان فاصله بین ارسال را که اوردم روی 10000 نانو ثانیه همه پکت ها دریافت شد
18- در دریافت 10 میلیون پکت تا وقتی سایز 1 و 100 بایت بود یعنی پی لود این مقدار بود tshark خوب عمل کرد و همه را گرفت ولی پی لود که شد 1000 بایت tshark هم لاست داشت
19- در سناریوی testPFRing_count_udp_v1 هم مشاهده که اگر 10 میل پکت سایز 1 بایت ارسال بشه پشت هم این لیب می تواند بخواند
20- در سناریوی testPFRing_count_udp_v1 پکت 100 بایت بود و در مقدار 20 میل و این سناریو توانست بگیرد.
21- در سناریوی tst_udp_get_libpcap با اینکه حافظه زیاد کردم ولی مثلا در گی لود 500 بایت لاست داشتیم


نتایج:
1- 








----------- old
- اگر تایم اوت دار کنیم سلکت را دریافت روی پورت یو دی پی ه مشکل می خورد
- ارسال تی سی پی داده را اگریگیت می کند
- پکت دریافتی از یو دی پی را باید drain  کرد
- فایل رایت باعث می شود بیت ریت کاهش پیدا کند
- هر چقدر فاصله اجرا ها بیشتر شده بیت ریت افزایش یافته ولی چون فایل رایت داریم نتیجه نامعتبر است و چند پارامتر در نتیجه موثر است
- 