- فرض می گیرم یک ترد دیگری هست که کنترل می کند شرایط برای شروع ترد انتقال یا خواند نداده در برنامه بریدج کار می کند و اونه که چک میکنه همه چی اوکیه نه اینکه بعد از هر کانکشن چک بشه آِا شرایط اوکیه و تیک do_all_prerequisite_stablished زده بشه. اینجوری Seperation of concern رخ میده

- همه جا از سیستم ارور 0 یعنی اوکی استفاده کنم

- 14040528 آقای حمیدی گفتند که بافر سیرکولار ما وقتی هد مجدد به تیل رسید خوب لاست کند در نتیجه دیگر نیازی به لاک نخواهیم داشت و در نتیجه مشکل فرستنده است که زودتر بفرستد

- 14040601 اگر هرکی خواست به یکی دیگه پیامی مستقیم بدهد از push sub استفاده کند

- 14040604 هر گروه در کانفیگ ها تنها می تواند یک نوع باشد مثلا یکی نمی تونه راند رابین باشه و دیگر رپلیکیت زیرا چجوری اینها را تقسیم کنم

- 14040623 . فرضم اینست که سمت گیرنده udp بافر باید سریع باشد و سمت خالی کننده بافر توی یک مخزن بزرگ که بعدا هم فایل می شود کند تر هم بود عیبی ندارد

- 14040624 فعلا یک ترد فعلا از بافر اصی می خواند و می نویسد درون tcp ها ولی بعدا می تواند چند تا باشد زیرا ارسال tcp می تواند کند باشد

- 14040624 . فرض بگیرم اسم کانفیگ با محتواش فیکس میشه در نتیجه یک مپ خوبی بین کانکشن ها و نامشون ایجاد میشه و دسترسی سریع میشه
پس حتما چک شود که نامها یکی نباشد به هیچ وجه

- کاراکتر های اسم گروه کانفیگ Tcp مقداری باشد که مقایسه نوشتار سریع متوجه شود که این کانفیگ name با دیگری برابر است یا نه

- همه پکت های ذخیره شده یک دسترسی دارد به نقطه ای که وقتی کانکشن وصل شد اون نقطه پر می شود و از اون به بعد تا وقتی پکت می رود یون نقطه به لینک درستی ادرس دهی می شود اگر هم نرفت خب مجدد یکی م گردد دنبال کانشکن درست و مجدد اون pointer را پر می کند

- اگر یکهو مو گکت زیاد باشه میاد بر اساس شیب چند تا درمیون را tcp می فرستد و بقیه را می فرستد در فایل بعد قرار است وقتی پکت در فایل زمان نزدیکتری داشت بیاید و اونرا بفرستد و بعد مجدد از رم بخواند و بفرستد
