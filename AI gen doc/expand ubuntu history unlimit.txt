On Ubuntu (and most Linux shells), `bash` only saves a limited number of commands in `~/.bash_history`, and that file is overwritten when a session ends.
We can make it **store commands “forever”** (or at least until disk is full) by increasing history size and preventing it from being erased.

---

## 1. Edit `~/.bashrc` to keep unlimited history

Open your bash configuration:

```bash
nano ~/.bashrc
```

Add these lines at the end:

```bash
## Keep history forever
HISTSIZE=
HISTFILESIZE=

## Append instead of overwrite
shopt -s histappend

## Immediately save each command to history file
PROMPT_COMMAND="history -a; history -n; $PROMPT_COMMAND"

## Optional: Add timestamps
HISTTIMEFORMAT='%F %T '
```

Explanation:

* `HISTSIZE=` → unlimited in-memory history.
* `HISTFILESIZE=` → unlimited file history.
* `histappend` → appends new commands instead of overwriting the history file.
* `history -a` → append new command to history file after each run.
* `history -n` → read any commands from other terminals instantly.
* `HISTTIMEFORMAT` → adds date/time to each entry.

---

## 2. Apply changes

```bash
source ~/.bashrc
```

---

## 3. Verify settings

```bash
echo $HISTSIZE $HISTFILESIZE
```

If both are empty or very large, history should grow indefinitely.
You can check the size of your history:

```bash
wc -l ~/.bash_history
```

---

## 4. Optional: Backup history automatically

To ensure you never lose history (even if `.bash_history` gets corrupted), set up a daily backup:

```bash
mkdir -p ~/.history_backups
(crontab -l; echo "0 0 * * * cp ~/.bash_history ~/.history_backups/bash_history_\$(date +\%F)") | crontab -
```

---

If you want, I can also give you a **script to merge history from all terminal sessions** into one master log file so you never lose a single command.
Do you want me to prepare that?
