
کار امروز برنامه تولید کننده پکت udp حالا تعداد thread های ارسال کننده متغییر بشود که بشود فشار کار را زیاد کرد

--------

سلام صبح به خیر
من یه نگاه اجمالی به iperf کردم. ما هدفمون چیه؟ هدفمون اینه که با حداکثر bitrateی که پهنای باند ما اجازه میده اگر pktها ارسال بشه به ورودی دستگاه وسط بتونه همه اونها رو process کنه و اگر نمیکنه ببینیم حداکثر rateی که میتونیم pkt ارسال کنیم تا همه process بشن چقدره یا به عبارتی چند درصد از pktها در حالت ارسال حداکثری lost میشن. در اثر چی lost میشن؟ در اثر زمانی که ما لازم داریم برای اینکه اونها رو process کنیم. طبعاً وقتی میخواهیم از اون طرف ارسالشون هم بکنیم به سرور سوم این زمان بیشتر هم میشه. پس تست کامل ما وقتی هست که همه مراحل انجام بشه. برای اینکه بتونیم جدا جدا هم این اطلاعات رو داشته باشیم و بدونیم چقدر از بار process صرف دریافت pktها شده و چقدر صرف ساخت pktهای ارسالی به سرور سوم و ارسال اونها طبعاً این benchmarking باید در داخل خود برنامه باشه که بتونه بار process هر بخش رو به طور جداگانه به ما نشون بده. اما نهایتاً اون چیزی که میخواهیم بدونیم اینه که حداکثر با چه rateی میتونه سرور اول pktها رو ارسال کنه که تمام اونها توسط سرور سوم دریافت بشه. حالا اگه این ابزار میتونه این اطلاعات رو به ما بده که خوبه، ازش استفاده میکنیم. طبعاً با configهای مختلف میخواهیم این اطلاعات رو به دست بیاریم. وقتی تعداد portهای ورودی زیاد میشه چه تأثیری داره و وقتی تعداد خروجیها زیاد میشه چه تأثیری. از این جور بازیها میخوایم باهاش درآریم و اطلاعات processorی که در سرور وسط نشسته رو بدونیم. این میشه در واقع اون benchmark کردنه.

لینک بین سرورها در virtual machine به لحاظ توانایی بالا بردن bitrate به چی بستگی داره؟ خود اون driverی که برای virtual machine گذاشته‌اند دخیله یا پارامترهای دیگه هم هست؟ اینم یه موضوعیه که در تستهای ما دخالت میکنه. البته اگه ما بتونیم لینک با پهنای باند بالا روی سرورهای physical داشته باشیم تست دقیقتری خواهیم داشت. ولی خب حالا فعلاً همین رو سعی کنیم تا بتونیم منطبق بر واقعش کنیم.

یه نکته‌ای رو شاید یادم رفت بگم اینه که نوع فرستادن به پورتهای خروجی رو هم میخوایم بتونیم در config بیاریم. دقیقترش رو حالا بعداً بهت میگم ولی اینو در نظر داشته باش. ممکنه بخواهیم یه pkt رو به بیش از یک port بفرستیم (duplicate) یا مشخص کنیم کدوم پورتهای ورودی به کدوم خروجیها برن. یا ممکنه بخواهیم بالانس بین خروجیها توسط خود نرم افزار برقرار بشه. یعنی خودش بر اساس بار هر خروجی تصمیم بگیره به کدوم بفرسته که موازنه رعایت بشه.

حالا الان که ساعت کاریت رد شده. اینا رو الان میفرستم که فردا بیای بشینی روشون فکر کنی.

--------

make glossary bussines

------------


تسک 3
یک سری پکت udp در پورت های مختلف می آید و سر پورت می ایستیم و پورت ها مختلف است در یک کانفیگ گفته می شود اینها را در چه پورت هایی بصورت tcp بریزیم و مقصد و پورت در config است. و همزمان دسته های مختلفی از udp port group ها را اینکا را برایش می کند و موازی است.


سناریو :
هر فایل کانفیگی که اضافه شد خوانده شود و متناسب با آن راه ارتباطی گروه udp هاش برقرار شود و اگر پاک شد که اونها رو هم ببنده پس یعنی شناسه داره

فایل ها امکان غیر فعال کردن داشته باشد و این تغییرات اعمال شود و مثل همون سیستم کانفیگ سیل لودش همیشه نباشه بلکه بهش اگر بگی زود بزنه و اگر نگی مثلا هر 10 دقیقه
یک فایل کانفیگ هم برای رفرش کانفیگ ها

امکان multiplex هم بعدا اضافه شود ولی جاش در کانفیگ باشد


هر فایل مشخص کند چه دسته ای پی ها و پورت هایی ولی برای راحتی کار اول کار رنج نگیرد و تک به تک سازنده بسازد بگذارد در فایل

یک سیستم خطا یابی در فایل هم گیز جالبی است


فایل را باید بخوانم که کانفیگ برای تعداد دسته هایی که تعریف می شود مشخص شود

پس یک ترد میاید و فایل های کانفیگ را می خواند که تغییرات را بسنحد و مواردی جاب اصلی را بیاورد و موارد حذفی را بزند

جابی که بالا میاید  مجموعه ای پی و پورتی برایش مشخص است که قرار است آنها را بفرستد روی لینک هایی از tcp

دارم فکر می کنم یک elasticity به پروسس های جدید که قرار است بنشینند سر پورت در نظر بگیرم

