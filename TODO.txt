
کند تر پکت ارسال کنم ببینم برنامه من میگیره

ببینم راهی هست سلکت یا ای پول فقط به ازای هر پکت یکبار صدا بشه

سعی کنم همه پکت ها را بگیرم مثل وایر شارک

فیلد های ولید در قسمت کانفیگ ها پر شود

------------

XDP // network stack

----سناریو های تست را دربیار


+++++ چرا وقتی یکی در حال پکت ارسال کردن است برنامه من که از وسط کار رسیده نمی تونه ببینه این پکت را و سلک کار نمی کنه ولی اگر تست کنم برنامه دیگر کار کند این بده

وقتی پکت یو دی پی را نگیریم کار گیر می کند و ارسال متوقف می شود و پورت دیگر ارور می دهد

زمان ارسال مثلا تعدادی پکت به یو دی پی و تس سی پی

و هر مدل اجرایی برای udp تست شود و هم برای tcp تست شود

چک کنم چند تا بفرستم که tcpdump همه پکت ها را بگیرد و برای ما نگیرد و علتش چیست که برنامه ما گاهش دیگر نمی تواند پکت بگیرد

چرا اگر پورت udp را نگیریم گیز می کند و علت چیست

در حالتی که بعد از get یudp می خواهیم از طریق tcp دیتا را بفرستیم و یک باتل نک داریم حالا Rate ای که udp بفرستد و این buttleneck پیش نیاید چقدر است

کارهایی که انجام دادم و شد را برای حمیدی بفرستم و نتایج را بهشان اعلام کنم

hping هم تعدادی پکت بفرستد و اونطرف بگیرد و ببینیم چند تا لاست دارد

لاست در حالت tcp

و تست هام رو حجم های متفاوت بفرستم که در واقع اندازه هدر تحت شعاع قرار بگیرد و یا نگیرد

مقایسه آمار با wget و دانلود یک فایل


ادعای Tcp که می گوید لاست ندارد را تست کنیم

مقایسه آمار وقتی مالی ترد و تعداد پورت زیاد داریم و با باتل نک های متفاوت باشد رفتار نتایج چه می شود

تست هام رو روی wsl تست کنم ببینم چجوری میشه

hping , wget



tcp benchmark

packet lost

packet lost udp

install linux and vs code on it


-------

سلام صبح به خیر
من یه نگاه اجمالی به iperf کردم. ما هدفمون چیه؟ هدفمون اینه که با حداکثر bitrateی که پهنای باند ما اجازه میده اگر pktها ارسال بشه به ورودی دستگاه وسط بتونه همه اونها رو process کنه و اگر نمیکنه ببینیم حداکثر rateی که میتونیم pkt ارسال کنیم تا همه process بشن چقدره یا به عبارتی چند درصد از pktها در حالت ارسال حداکثری lost میشن. در اثر چی lost میشن؟ در اثر زمانی که ما لازم داریم برای اینکه اونها رو process کنیم. طبعاً وقتی میخواهیم از اون طرف ارسالشون هم بکنیم به سرور سوم این زمان بیشتر هم میشه. پس تست کامل ما وقتی هست که همه مراحل انجام بشه. برای اینکه بتونیم جدا جدا هم این اطلاعات رو داشته باشیم و بدونیم چقدر از بار process صرف دریافت pktها شده و چقدر صرف ساخت pktهای ارسالی به سرور سوم و ارسال اونها طبعاً این benchmarking باید در داخل خود برنامه باشه که بتونه بار process هر بخش رو به طور جداگانه به ما نشون بده. اما نهایتاً اون چیزی که میخواهیم بدونیم اینه که حداکثر با چه rateی میتونه سرور اول pktها رو ارسال کنه که تمام اونها توسط سرور سوم دریافت بشه. حالا اگه این ابزار میتونه این اطلاعات رو به ما بده که خوبه، ازش استفاده میکنیم. طبعاً با configهای مختلف میخواهیم این اطلاعات رو به دست بیاریم. وقتی تعداد portهای ورودی زیاد میشه چه تأثیری داره و وقتی تعداد خروجیها زیاد میشه چه تأثیری. از این جور بازیها میخوایم باهاش درآریم و اطلاعات processorی که در سرور وسط نشسته رو بدونیم. این میشه در واقع اون benchmark کردنه.

لینک بین سرورها در virtual machine به لحاظ توانایی بالا بردن bitrate به چی بستگی داره؟ خود اون driverی که برای virtual machine گذاشته‌اند دخیله یا پارامترهای دیگه هم هست؟ اینم یه موضوعیه که در تستهای ما دخالت میکنه. البته اگه ما بتونیم لینک با پهنای باند بالا روی سرورهای physical داشته باشیم تست دقیقتری خواهیم داشت. ولی خب حالا فعلاً همین رو سعی کنیم تا بتونیم منطبق بر واقعش کنیم.

یه نکته‌ای رو شاید یادم رفت بگم اینه که نوع فرستادن به پورتهای خروجی رو هم میخوایم بتونیم در config بیاریم. دقیقترش رو حالا بعداً بهت میگم ولی اینو در نظر داشته باش. ممکنه بخواهیم یه pkt رو به بیش از یک port بفرستیم (duplicate) یا مشخص کنیم کدوم پورتهای ورودی به کدوم خروجیها برن. یا ممکنه بخواهیم بالانس بین خروجیها توسط خود نرم افزار برقرار بشه. یعنی خودش بر اساس بار هر خروجی تصمیم بگیره به کدوم بفرسته که موازنه رعایت بشه.


